#summary Trackit package

<wiki:toc max_depth="2" />

= Overview =

Trackit is an add-on package for the statistical environment *R* to efficiently estimate movement parameters and predict "the most probable track" directly from the raw light measurements obtained from archival tagged individuals. Its basic use is to fit and plot the model described in Nielsen and Sibert 2007.

The model is unique in estimating the most probable track without making any light-level threshold assumptions, or constraining the movement of the tag between dawn and dusk. The model generates 2 estimates of geographic positions per day (at dawn and dusk) based on light and 3 estimates of positions per day (at dawn, dusk, SST time point) when sea-surface temperature (SST) are used in combination with light. The covariance structure of the model is designed to handle high correlations between light measurements, such as might be caused by local weather conditions. The yearly pattern in latitude precision is estimated by propagating the data uncertainities through the geolocation process. The model has been applied to simulated data, mooring studies, and real deployments on swimming and diving fish.

= Publications = 

  * [http://www.int-res.com/abstracts/meps/v419/p71-84/ Trackit with SST] - Lam, Chi H., Anders Nielsen, and John R. Sibert, 2010. Incorporating sea-surface temperature to the light-based geolocation model !TrackIt. Marine Ecology Progress Series MEPS 419:71-84
  * [http://www.soest.hawaii.edu/PFRP/reprints/Nielsen_Sibert_2007.pdf Trackit] - Nielsen, Anders, and John R. Sibert, 2007. State-space model for light-based tracking of marine animals. Can. J. Fish. Aquat. Sci. 64: 1055-1068.

= Cheatsheet of Trackit =
  
http://geolocation.googlecode.com/svn/wiki/images/trackit.jpg

= Input data format =  
  ==1. Light data==
  {{{
  year month day hour min sec depth light  temp
  2003     9   8    2  32   0  22.5   173 21.75
  2003     9   8    2  33   0  22.5   173 21.75
  2003     9   8    2  34   0  23.0   173 21.75
  2003     9   8    2  35   0  22.5   173 21.75
  2003     9   8    2  36   0  22.0   173 21.75
  2003     9   8    2  37   0  22.0   173 21.75
  }}}
  * `depth` values can be used for correcting light measurements taken at deeper depths. This is only recommended when detailed, high resolution time series is available. Check documentation for usage
  {{{
  ?two.layer.depth.corr
  }}}
  ==2. SST data==
  {{{
  year month day hour min sec sst
  2003     9   8    0   0   0  21.7
  2003     9   9    0   0   0  22.5   
  2003     9  10    0   0   0  24.0
  2003     9  11    0   0   0  21.5
  2003     9  12    0   0   0  22.0
  2003     9  13    0   0   0  22.5
  }}}  

= Basic Workflow =
  
  {{{
# Note: delete the hash sign (#) at the beginning to uncomment a line

library(trackit)  
track<-read.table("datafile.dat", header=TRUE) # change file name and path for your own file
prep.track<-prepit(track, fix.first=c(360-161.45,22.85,2002,9,10,0,0,0), 
                   fix.last=c(360-159.87,21.95,2003,5,21,0,0,0), scan=FALSE)
fit<-trackit(prep.track)
  }}}
  
  # Load packages
  # Read in data files (light, SST data)
  # (Optional) Perform depth correction of light measurements
     {{{
	 track <- two.layer.depth.corr(track)
	 }}}
  # (Optional) Download SST satellite imagery
     {{{
	 sstfolder <- get.sst.from.server(track,200,250,10,40)
	 ?get.blended.sst
	 }}}
  # Prepare data for trackit via the `prepit` function
     * Make sure `fix.first` and `fix.last` contain the correct release and reporting/ recapture postions
	 * Set `scan=FALSE` when transmitted light data are used (Wildlife Computer tags)
     * Arguments `sst` and `localsstfolder` are only required when you desire to do SST matching as well
  # Run the model via the `trackit` function
     * It is not uncommon that model fails to converge. Try using different initial values or turn off estimation of some parameters to simplify the model. For instance, for tracks with a very short deployment, try
	 {{{
     fit <- trackit(prep.track, ss3.ph=-1)
	 }}}
	 
= Subsampling light data =
  == Transmitted light data ==
    * Wildlife Computer PSATs
	* Light values are already depth-corrected on board of the instrument
  == Recovered light data time series ==
    * Nielsen and Sibert (2007) show that tracks can be reconstructed with high fidelty even when the time series data are at a lower sampling frequency (up to 14 min between successive observations).
	* Sub-sampling full resolution time series will also shorten computation time
	* If you want to depth-correct your light measurements, make sure you perform that before sub-sampling your time series
	* Sub-sampling can be done with code like below:
	{{{
	track2 <- track[seq(1,nrow(track),2),] # Retain every other row
	}}}
	
= Output and Plotting =
  == The `fit` object ==
  
  == Diagnosis: `plot` function ==
  == Mapping: `fitmap` function ==
  
= Known issues =
  * Light data must have a continuous sinusoidal-like waveform, i.e. light "curves" that function resemble square waves (box-car) will not work well in Trackit. Tags that uses the light sensors as an "on-off" switch will not provide adequate information for Trackit to run, which includes recovered tags from Microwave Telemetry and bird tags from BAS.